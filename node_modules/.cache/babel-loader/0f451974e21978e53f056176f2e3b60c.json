{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\Protfolio\\\\My-portfolio-\\\\src\\\\Context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const themeContext = /*#__PURE__*/createContext();\nconst initialState = {\n  darkMode: false\n};\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"toggle\":\n      return {\n        darkMode: !state.darkMode\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ThemeProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(themeContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ThemeProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/Protfolio/My-portfolio-/src/Context.js"],"names":["createContext","useReducer","themeContext","initialState","darkMode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;AAEP,MAAMG,YAAY,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,QAAL;AACC,aAAO;AAAEJ,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF;AAAnB,OAAP;;AACD;AACC,aAAOE,KAAP;AAJF;AAMA,CAPD;;AASA,OAAO,MAAMG,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBV,UAAU,CAACI,YAAD,EAAeF,YAAf,CAApC;AACA,sBACC,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAF;AAASK,MAAAA;AAAT,KAA9B;AAAA,cACED,KAAK,CAACE;AADR;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAPM;;GAAMH,a;;KAAAA,a","sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nexport const themeContext = createContext();\r\n\r\nconst initialState = { darkMode: false };\r\n\r\nconst themeReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"toggle\":\r\n\t\t\treturn { darkMode: !state.darkMode };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const ThemeProvider = (props) => {\r\n\tconst [state, dispatch] = useReducer(themeReducer, initialState);\r\n\treturn (\r\n\t\t<themeContext.Provider value={{ state, dispatch }}>\r\n\t\t\t{props.children}\r\n\t\t</themeContext.Provider>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}