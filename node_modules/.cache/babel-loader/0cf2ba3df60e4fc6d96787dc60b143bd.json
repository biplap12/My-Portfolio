{"ast":null,"code":"import _slicedToArray from\"C:/Users/User/Desktop/React-practise/My_porttfolio/My_portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var themeContext=/*#__PURE__*/createContext();var initialState={darkMode:false};var themeReducer=function themeReducer(state,action){switch(action.type){case\"toggle\":return{darkMode:!state.darkMode};default:return state;}};export var ThemeProvider=function ThemeProvider(props){var _useReducer=useReducer(themeReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(themeContext.Provider,{value:{state:state,dispatch:dispatch},children:props.children});};","map":{"version":3,"sources":["C:/Users/User/Desktop/React-practise/My_porttfolio/My_portfolio/src/Context.js"],"names":["createContext","useReducer","themeContext","initialState","darkMode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":"qJAAA,OAASA,aAAT,CAAwBC,UAAxB,KAA0C,OAA1C,C,2CAEA,MAAO,IAAMC,CAAAA,YAAY,cAAGF,aAAa,EAAlC,CAEP,GAAMG,CAAAA,YAAY,CAAG,CAAEC,QAAQ,CAAE,KAAZ,CAArB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACvC,OAAQA,MAAM,CAACC,IAAf,EACC,IAAK,QAAL,CACC,MAAO,CAAEJ,QAAQ,CAAE,CAACE,KAAK,CAACF,QAAnB,CAAP,CACD,QACC,MAAOE,CAAAA,KAAP,CAJF,CAMA,CAPD,CASA,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CACvC,gBAA0BT,UAAU,CAACI,YAAD,CAAeF,YAAf,CAApC,4CAAOG,KAAP,iBAAcK,QAAd,iBACA,mBACC,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEL,KAAK,CAALA,KAAF,CAASK,QAAQ,CAARA,QAAT,CAA9B,UACED,KAAK,CAACE,QADR,EADD,CAKA,CAPM","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const themeContext = createContext();\n\nconst initialState = { darkMode: false };\n\nconst themeReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"toggle\":\n\t\t\treturn { darkMode: !state.darkMode };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const ThemeProvider = (props) => {\n\tconst [state, dispatch] = useReducer(themeReducer, initialState);\n\treturn (\n\t\t<themeContext.Provider value={{ state, dispatch }}>\n\t\t\t{props.children}\n\t\t</themeContext.Provider>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}